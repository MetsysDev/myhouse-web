{"version":3,"sources":["components/menu.js","pages/cpu.js","pages/home.js","pages/chat.js","components/btn-socketio.js","pages/controls-house.js","pages/location-house.js","routes.js","template.js","App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Menu","className","to","size","color","data","labels","datasets","label","x","y","backgroundColor","options","scales","yAxes","ticks","beginAtZero","Cpu","Home","id","src","logo","alt","myId","uuid","socket","io","Chat","useState","message","updateMessage","messages","updateMessages","useEffect","handleNewMessage","newMessage","on","off","map","m","index","key","onSubmit","event","preventDefault","trim","emit","onChange","target","value","placeholder","type","socketIOClient","BtnSocket","props","setColor","comand","state","onClick","Controls","Orphanages","Map","center","zoom","style","width","height","TileLayer","url","Routes","path","exact","component","ControlsHouse","LocationHouse","Template","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"8SAkCeA,MAzBf,WACI,OACI,2BAAOC,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,OACnB,kBAAC,IAAD,CAAQE,KAAK,KAAKC,MAAM,UAK5B,kBAAC,IAAD,CAAMF,GAAG,YAAYD,UAAU,OAC3B,kBAAC,IAAD,CAAOE,KAAK,KAAKC,MAAM,UAE3B,kBAAC,IAAD,CAAMF,GAAG,QAAQD,UAAU,OACvB,kBAAC,IAAD,CAAQE,KAAK,KAAKC,MAAM,UAK5B,kBAAC,IAAD,CAAMF,GAAG,IAAID,UAAU,OACnB,kBAAC,IAAD,CAAWE,KAAK,KAAKC,MAAM,Y,eCtBrCC,EAAO,CACXC,OAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACzBC,SAAU,CACR,CACEC,MAAO,YACPH,KAAM,CAeJ,CAACI,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,IACV,CAACD,EAAG,EAAGC,EAAG,IACV,CAACD,EAAG,EAAGC,EAAG,IACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,IACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,IACV,CAACD,EAAG,EAAGC,EAAG,IAEZC,gBAAiB,2BAKjBC,EAAU,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,OAaRC,MANf,WACI,OACG,kBAAC,OAAD,CAAMZ,KAAMA,EAAMO,QAASA,K,iCCrBnBM,MAzBf,WACE,OACE,yBAAKC,GAAG,gBACN,yBAAKlB,UAAU,mBACb,yBAAKmB,IAAKC,IAAMC,IAAI,UAEpB,8BACE,4DACA,oFAGF,yBAAKrB,UAAU,YACb,8CACA,iDAGF,kBAAC,IAAD,CAAMC,GAAG,cAAcD,UAAU,iBAC/B,kBAAC,IAAD,CAAcE,KAAM,GAAIC,MAAM,0B,kDCnBlCmB,G,OAAOC,OACPC,EAASC,IAHE,wCA0DFC,EApDF,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACRC,EADQ,KACCC,EADD,OAEoBF,mBAAS,IAF7B,mBAERG,EAFQ,KAEEC,EAFF,KAIfC,qBAAU,WACN,IAAMC,EAAmB,SAAAC,GAAU,OAC/BH,EAAe,GAAD,mBAAKD,GAAL,CAAeI,MAEjC,OADAV,EAAOW,GAAG,eAAgBF,GACnB,kBAAMT,EAAOY,IAAI,eAAgBH,MACzC,CAACH,IAgBJ,OACI,0BAAM9B,UAAU,aACZ,wBAAIA,UAAU,QACR8B,EAASO,KAAI,SAACC,EAAGC,GAAJ,OACX,wBACIvC,UAAS,iCAA4BsC,EAAEpB,KAAOI,EAAO,OAAS,SAC9DkB,IAAKD,GAEL,0BAAMvC,UAAS,2BAAsBsC,EAAEpB,KAAOI,EAAO,OAAS,UACxDgB,EAAEV,cAKpB,0BAAM5B,UAAU,OAAOyC,SA5BN,SAAAC,GACrBA,EAAMC,iBACFf,EAAQgB,SACRpB,EAAOqB,KAAK,eAAgB,CACxB3B,GAAII,EACJM,YAEJC,EAAc,OAsBV,2BACI7B,UAAU,cACV8C,SApBU,SAAAJ,GAAK,OAC3Bb,EAAca,EAAMK,OAAOC,QAoBfC,YAAY,sBACZC,KAAK,OACLF,MAAOpB,O,QClDrBJ,EAAS2B,IADE,yCAuCFC,MApCf,SAAmBC,GAAQ,IAAD,EACQ1B,mBAAS,IADjB,gCAGEA,mBAAS,SAHX,mBAGjBxB,EAHiB,KAGVmD,EAHU,KAwBxB,OAdAtB,qBAAU,WACRR,EAAOW,GAAG,gBAAgB,SAAA/B,GACxB,GAAoB,iBAATA,EACT,OAAQA,EAAKmD,QACX,IAAK,MACH,IAAIC,EAAQpD,EAAKoD,OAAS,EAC1BF,EAAkB,QAATnD,GAA4B,GAATqD,EAAY,OAAS,iBAMxD,CAACrD,IAGF,yBAAKH,UAAU,WACX,yBAAKyD,QAtBO,SAAUJ,GAC1B7B,EAAOqB,KAAK,eAAgB,CAC1B,OAAU,UAqBR,kBAAC,IAAD,CAAgB3C,KAAK,KAAKC,MAAOA,KAEjC,uC,OCWOuD,MApCf,WACE,OACE,2BAAOxC,GAAG,sBACR,kBAAC,EAAD,MAEA,yBAAKlB,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQE,KAAK,KAAKC,MAAM,UAE1B,mDAIF,yBAAKH,UAAU,WACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAME,KAAK,KAAKC,MAAM,UAExB,qCAIJ,yBAAKH,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQE,KAAK,KAAKC,MAAM,UAE1B,uCAIF,yBAAKH,UAAU,WACb,kBAAC,IAAD,CAAQE,KAAK,KAAKC,MAAM,Y,gCCfjBwD,MAlBf,WACI,OACI,yBAAKzC,GAAG,YACJ,kBAAC0C,EAAA,EAAD,CACIC,OAAQ,CAAC,cAAc,cACvBC,KAAM,GACNC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAEhC,kBAACC,EAAA,EAAD,CAAWC,IAAI,sDAGnB,kBAAC,IAAD,CAAMlE,GAAG,IAAID,UAAU,wBACnB,kBAAC,IAAD,CAAQE,KAAK,KAAKC,MAAM,YCUzBiE,MAff,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,OAAOC,OAAK,EAACC,UAAWvD,IACpC,kBAAC,IAAD,CAAOqD,KAAK,QAAQC,OAAK,EAACC,UAAW7C,IACrC,kBAAC,IAAD,CAAO2C,KAAK,QAAQC,OAAK,EAACC,UAAWtD,IACrC,kBAAC,IAAD,CAAOoD,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,YAAYE,UAAWE,O,OCFpCC,MAlBf,WACI,OACI,yBAAKxD,GAAG,iBACJ,2BAAOlB,UAAU,YACf,yBAAKA,UAAU,QAAf,OAKF,2BAAOkB,GAAG,WACR,6BACE,kBAAE,EAAF,UCPDyD,MANf,WACI,OACI,kBAAC,EAAD,OCOYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMjE,a,mBEzI5BmE,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.1f09dfa9.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    FiHome, FiPlus, FiMonitor,\n    FiMap, FiCpu, FiSend, FiSettings,\n    FiSliders, FiTv, FiWind\n  } from 'react-icons/fi';\n\n\nfunction Menu() {\n    return(\n        <aside className=\"menu\">\n            <Link to=\"/\" className=\"btn\">\n                <FiHome size=\"18\" color=\"#000\"/>\n            </Link>\n            {/* <Link to=\"/home\" className=\"btn\">\n                <FiMonitor size=\"18\" color=\"#000\"/>\n            </Link> */}\n            <Link to=\"/location\" className=\"btn\">\n                <FiMap size=\"18\" color=\"#000\"/>\n            </Link>\n            <Link to=\"/chat\" className=\"btn\">\n                <FiSend size=\"18\" color=\"#000\"/>\n            </Link>\n            {/* <Link to=\"/cpu\" className=\"btn\">\n                <FiCpu size=\"18\" color=\"#000\"/>\n            </Link> */}\n            <Link to=\"/\" className=\"btn\">\n                <FiSliders size=\"18\" color=\"#000\"/>\n            </Link>\n        </aside>\n    );\n}\n\nexport default Menu;","import React from 'react';\n\nimport { Line } from 'react-chartjs-2';\n\n// const rand = () => Math.round(Math.random() * 20 - 10)\n\nconst data = {\n  labels: [1,2,3,4,5,6,7,8,9],\n  datasets: [\n    {\n      label: 'A dataset',\n      data: [\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        // { x: rand(), y: rand() },\n        {x: 1, y: 5},\n        {x: 2, y: 15},\n        {x: 3, y: 10},\n        {x: 4, y: 20},\n        {x: 5, y: 5},\n        {x: 6, y: 25},\n        {x: 7, y: 3},\n        {x: 8, y: 10},\n        {x: 9, y: 8},\n      ],\n      backgroundColor: 'rgba(255, 99, 132, 1)',\n    },\n  ],\n}\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n}\n\nfunction Cpu() {\n    return(\n       <Line data={data} options={options} />\n    );\n}\n\nexport default Cpu;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiArrowRight } from 'react-icons/fi';\n\nimport '../styles/global.css'\nimport '../styles/pages/landing.css'\n\nimport logo from '../images/logo.svg'\n\nfunction Home() {\n  return (\n    <div id=\"page-landing\">\n      <div className=\"content-wrapper\">\n        <img src={logo} alt=\"happy\"/>\n\n        <main>\n          <h1>Leve felicidade para o mundo</h1>\n          <p>Visite orfanatos e mude o dia de muitas crian√ßas.</p>\n        </main>\n\n        <div className=\"location\">\n          <strong>Rio do Sul</strong>\n          <span>Santa Catarina</span>\n        </div>\n\n        <Link to=\"/orphanages\" className=\"btn enter-app\">\n          <FiArrowRight size={26} color=\"rgba(0, 0, 0, .6)\"/>\n        </Link>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react'\nimport io from 'socket.io-client'\nimport uuid from 'uuid/v4'\nimport '../styles/pages/chat.css';\n\nconst ENDPOINT = \"https://myhouse-server.herokuapp.com\";\n\nconst myId = uuid();\nconst socket = io(ENDPOINT);\n// socket.on('connect', () => console.log('[IO] Connect => A new connection has been established'));\n\nconst Chat = () => {\n    const [message, updateMessage] = useState('')\n    const [messages, updateMessages] = useState([])\n\n    useEffect(() => {\n        const handleNewMessage = newMessage =>\n            updateMessages([...messages, newMessage])\n        socket.on('chat message', handleNewMessage)\n        return () => socket.off('chat message', handleNewMessage)\n    }, [messages])\n\n    const handleFormSubmit = event => {\n        event.preventDefault()\n        if (message.trim()) {\n            socket.emit('chat message', {\n                id: myId,\n                message\n            })\n            updateMessage('')\n        }\n    }\n\n    const handleInputChange = event =>\n        updateMessage(event.target.value)\n\n    return (\n        <main className=\"container\">\n            <ul className=\"list\">\n                { messages.map((m, index) => (\n                    <li\n                        className={`list__item list__item--${m.id === myId ? 'mine' : 'other'}`}\n                        key={index}\n                    >\n                        <span className={`message message--${m.id === myId ? 'mine' : 'other'}`}>\n                            { m.message }\n                        </span>\n                    </li>\n                ))}\n            </ul>\n            <form className=\"form\" onSubmit={handleFormSubmit}>\n                <input\n                    className=\"form__field\"\n                    onChange={handleInputChange}\n                    placeholder=\"Digite sua mensagem\"\n                    type=\"text\"\n                    value={message}\n                />\n            </form>\n        </main>\n    )\n}\n\nexport default Chat\n","import React, { useState, useEffect } from 'react';\nimport {FaRegLightbulb} from 'react-icons/fa';\n\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"https://myhouse-server.herokuapp.com/\";\nconst socket = socketIOClient(ENDPOINT);\n\nfunction BtnSocket(props) {\n  const [response, setResponse] = useState(\"\");\n\n  const [color, setColor] = useState('#000');\n  const turnLight = function (props) {\n    socket.emit('comand-house', {\n      'comand': 'luz'\n    });\n  }\n\n  useEffect(() => {\n    socket.on(\"comand-house\", data => {\n      if (typeof(data) == 'object') {\n        switch (data.comand) {\n          case 'luz':\n            let state = data.state || 0; // state representa o status de ligado ou desligado para o ultimo que se conectar\n            setColor(color != '#000' && state == 0? '#000' : '#4CAF50');\n            break;\n        }\n        \n      }\n    });\n  }, [color]);\n\n  return (\n    <div className=\"control\">\n        <div onClick={turnLight}>\n        <FaRegLightbulb size=\"24\" color={color}/>\n        </div>\n        <span>\n        Luz\n        </span>\n    </div>\n  );  \n}\n\nexport default BtnSocket;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport socketIOClient from \"socket.io-client\";\n\nimport {FiPlus, FiSend, FiTv, FiWind} from 'react-icons/fi';\nimport {FaRegLightbulb} from 'react-icons/fa';\n\nimport BtnSocket from '../components/btn-socketio'\n\nimport '../styles/pages/controls-house.css';\n\nfunction Controls() {\n  return (\n    <aside id=\"container-controls\">\n      <BtnSocket/>\n\n      <div className=\"control\">\n        <Link>\n          <FiWind size=\"24\" color=\"#000\"/>\n        </Link>\n        <span>\n          Ventila√ß√£o\n        </span>\n      </div>\n      <div className=\"control\">\n          <Link>\n            <FiTv size=\"24\" color=\"#000\"/>\n          </Link>\n          <span>\n            Tv\n          </span>\n      </div>\n      <div className=\"control\">\n        <Link>\n          <FiSend size=\"24\" color=\"#000\"/>\n        </Link>\n        <span>\n          Chat\n        </span>\n      </div>\n      <div className=\"control\">\n        <FiPlus size=\"24\" color=\"#000\"/>\n      </div>\n    </aside>\n  );\n}\n\nexport default Controls;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiPlus } from 'react-icons/fi';\n\nimport { Map, TileLayer } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css'\n\nimport '../styles/pages/orphanages-map.css';\n\nfunction Orphanages() {\n    return (\n        <div id=\"page-map\">\n            <Map\n                center={['-22.2184796','-49.645111']}\n                zoom={15}\n                style={{ width: '100%', height: '100%' }}\n            >\n                <TileLayer url=\"https://a.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n            </Map>\n\n            <Link to=\"/\" className=\"btn create-orphanage\">\n                <FiPlus size=\"32\" color=\"#fff\"/>\n            </Link>\n        </div>\n    );\n}\n\nexport default Orphanages;","import React from 'react';\nimport Menu from './components/menu'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    BrowserRouter\n} from 'react-router-dom';\n\nimport Cpu from './pages/cpu'\nimport Home from './pages/home'\nimport Chat from './pages/chat'\nimport ControlsHouse from './pages/controls-house'\nimport LocationHouse from './pages/location-house'\n\nfunction Routes() {\n    return(\n        <BrowserRouter>\n            <Menu />\n            <Switch>\n                <Route path=\"/cpu\" exact component={Cpu} />\n                <Route path=\"/chat\" exact component={Chat} />\n                <Route path=\"/home\" exact component={Home} />\n                <Route path=\"/\" exact component={ControlsHouse} />\n                <Route path=\"/location\" component={LocationHouse} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React from 'react';\nimport Routes from './routes'\n\nimport './styles/template.css';\n\nfunction Template() {\n    return (\n        <div id=\"page-template\">            \n            <aside className=\"menu-bar\">\n              <div className=\"user\">\n                CA\n              </div>\n            </aside>\n\n            <aside id=\"content\">\n              <div>\n                < Routes />\n              </div>\n            </aside>\n        </div>\n    );\n}\n\nexport default Template;","import React from 'react';\nimport Template from './template'\n\nfunction App() {\n    return (\n        <Template />\n    );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1653c647.svg\";"],"sourceRoot":""}